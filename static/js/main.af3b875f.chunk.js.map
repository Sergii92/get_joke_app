{"version":3,"sources":["components/Section/Article/Article.js","components/Section/Section.js","components/Aside/Burger/Burger.js","components/Aside/Aside.js","components/Header/Header.js","helpers/index.js","components/Main/Main.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["Article","props","className","joke","like","onClick","handleHeart","src","icon_url","href","url","target","id","value","Math","abs","moment","updated_at","diff","Date","now","categories","length","Section","data","map","key","handelFavoriteJokes","Burger","Aside","deleteFavoriteJokes","Header","actualApi","type","category","search","Main","addJoke","onChecked","checkedVariantJoke","setSelectCategory","selectCategory","setSearch","disabled","disabledButton","name","checked","onChange","htmlFor","placeholder","event","App","useState","jokes","setJokes","setCategories","favoriteJokes","setFavoriteJokes","setCheckedVariantJoke","useEffect","localFavoriteJokes","JSON","parse","localStorage","getItem","getCategories","setItem","stringify","getJokes","a","fetch","response","json","jokesFetch","result","console","log","categoriesFetch","preventDefault","every","item","updateJoke","newFavoriteJokes","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wVA8CeA,G,MAzCC,SAACC,GACf,OACE,iCACE,yBACEC,UAAWD,EAAME,KAAKC,KAAO,aAAe,QAC5CC,QAASJ,EAAMK,cAEjB,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKK,IAAKN,EAAME,KAAKK,YAEvB,yBAAKN,UAAU,aACb,yBAAKA,UAAU,WACb,qCACA,uBAAGO,KAAMR,EAAME,KAAKO,IAAKC,OAAO,UAC7BV,EAAME,KAAKS,KAGhB,yBAAKV,UAAU,gBAAgBD,EAAME,KAAKU,OAC1C,yBAAKX,UAAU,aACb,yBAAKA,UAAU,eAAf,eAEGY,KAAKC,IACJC,IAAOf,EAAME,KAAKc,WAAY,sBAAsBC,KAClDC,KAAKC,MACL,UAED,IAPL,aAUA,yBAAKlB,UAAU,iBACZD,EAAME,KAAKkB,WAAWC,OAAS,EAC5BrB,EAAME,KAAKkB,WAAW,GACtB,qBCrBHE,EAbC,SAACtB,GACf,OACE,iCACGA,EAAMuB,KAAKC,KAAI,SAACtB,GAAD,OACd,kBAAC,EAAD,CACEA,KAAMA,EACNuB,IAAKvB,EAAKS,GACVN,YAAa,kBAAML,EAAM0B,oBAAoBxB,WCGxCyB,G,MAVA,WACb,OACE,yBAAK1B,UAAU,UACb,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,kBCkBP2B,G,MAtBD,SAAC5B,GACb,OACE,+BACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,4CAGF,yBAAKA,UAAU,kBACZD,EAAMuB,KAAKC,KAAI,SAACtB,GAAD,OACd,kBAAC,EAAD,CACEA,KAAMA,EACNuB,IAAKvB,EAAKS,GACVN,YAAa,kBAAML,EAAM6B,oBAAoB3B,cCT5C4B,EATA,WACb,OACE,gCACE,yBAAK7B,UAAU,QACb,6CCNK8B,EAAY,SAACC,EAAMC,EAAUC,GACxC,MAAa,WAATF,EACK,0CACW,eAATA,EACH,oDAAN,OAA2DC,GAErD,iDAAN,OAAwDC,ICmF7CC,G,MApFF,SAAC,GASP,IARLC,EAQI,EARJA,QACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,mBACAC,EAKI,EALJA,kBACAC,EAII,EAJJA,eACAN,EAGI,EAHJA,OACAO,EAEI,EAFJA,UACArB,EACI,EADJA,WAEMsB,EDLsB,SAACJ,EAAoBE,EAAgBN,GACjE,OAA2B,eAAvBI,IAAuCE,OAEd,WAAlBF,GAAmCJ,EAAOb,OAAS,IAE5B,WAAvBiB,GCAMK,CAAeL,EAAoBE,EAAgBN,GAEpE,OACE,8BACE,oCACA,0EAEA,2BACE,2BACEjC,UAAU,kBACV+B,KAAK,WACLY,KAAK,SACLjC,GAAG,SACHkC,QAAgC,WAAvBP,EACTQ,SAAU,kBAAMT,EAAU,aAE5B,2BAAOU,QAAQ,UAAf,YAEF,2BACE,2BACE9C,UAAU,kBACV+B,KAAK,WACLY,KAAK,aACLjC,GAAG,aACHkC,QAAgC,eAAvBP,EACTQ,SAAU,kBAAMT,EAAU,iBAE5B,2BAAOU,QAAQ,cAAf,qBAEsB,eAAvBT,EACC,wBAAIrC,UAAU,cACXmB,EAAWI,KAAI,SAACS,GACf,OACE,wBACE7B,QAAS,kBAAMmC,EAAkBN,IACjChC,UAAWuC,IAAmBP,EAAW,SAAW,KACpDR,IAAKQ,GAEJA,OAKP,KAEJ,2BACE,2BACEhC,UAAU,kBACV+B,KAAK,WACLY,KAAK,SACLjC,GAAG,SACHkC,QAAgC,WAAvBP,EACTQ,SAAU,kBAAMT,EAAU,aAE5B,2BAAOU,QAAQ,UAAf,YAEsB,WAAvBT,EACC,2BACE,2BACEN,KAAK,OACLY,KAAK,OACLI,YAAY,wBACZpC,MAAOsB,EACPY,SAAU,SAACG,GAAD,OAAWR,EAAUQ,EAAMvC,OAAOE,WAG9C,KAEJ,4BAAQD,GAAG,SAASP,QAASgC,EAASM,SAAUA,GAAhD,iB,MCwDSQ,MAhIf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAGuBF,mBAAS,IAHhC,mBAGN/B,EAHM,KAGMkC,EAHN,OAK6BH,mBAAS,IALtC,mBAKNI,EALM,KAKSC,EALT,OAOuCL,mBAAS,MAPhD,mBAONb,EAPM,KAOcmB,EAPd,OAS+BN,mBAAS,MATxC,mBASNX,EATM,KASUD,EATV,OAWeY,mBAAS,IAXxB,mBAWNjB,EAXM,KAWEO,EAXF,KAabiB,qBAAU,WACR,IAAMC,EAAqBC,KAAKC,MAC9BC,aAAaC,QAAQ,sBAEvBP,EAAiBG,GACjBK,MACC,IAEHN,qBAAU,WACRI,aAAaG,QAAQ,oBAAqBL,KAAKM,UAAUX,MACxD,CAACA,IAEJ,IAAMY,EAAQ,uCAAG,8BAAAC,EAAA,+EAEQC,MACnBtC,EAAUO,EAAoBE,EAAgBN,IAHnC,cAEToC,EAFS,gBAMUA,EAASC,OANnB,OAMTC,EANS,OASXnB,EAAS,GAAD,mBAAKD,GADO,WAAlBd,EACM,YAAekC,EAAWC,QAE1B,CAAYD,KAXT,kDAcbE,QAAQC,IAAR,MAda,0DAAH,qDAkBRX,EAAa,uCAAG,8BAAAI,EAAA,+EAEGC,MAAM,+CAFT,cAEdC,EAFc,gBAIUA,EAASC,OAJnB,OAIdK,EAJc,OAMlBtB,EAAcsB,GANI,kDAQlBF,QAAQC,IAAR,MARkB,0DAAH,qDA+DnB,OACE,yBAAK1E,UAAU,mBACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEmC,QAxDQ,SAACa,GACfA,EAAM4B,iBACNV,KAuDM9B,UApDU,SAACL,GACjByB,EAAsBzB,IAoDhBM,mBAAoBA,EACpBC,kBAAmBA,EACnBC,eAAgBA,EAChBC,UAAWA,EACXP,OAAQA,EACRd,WAAYA,IAEd,kBAAC,EAAD,CAASG,KAAM6B,EAAO1B,oBAxDA,SAACxB,IACE,IAAzBqD,EAAclC,QAGZkC,EAAcuB,OAAM,SAACC,GAAD,OAAUA,EAAKpE,KAAOT,EAAKS,QAFnD6C,EAAiB,GAAD,mBAAKD,GAAL,aAAC,eAAwBrD,GAAzB,IAA+BC,MAAM,OAMvD,IAAM6E,EAAa5B,EAAM5B,KAAI,SAACuD,GAC5B,OAAIA,EAAKpE,KAAOT,EAAKS,GACZ,2BACFoE,GADL,IAEE5E,MAAM,IAGD,eACF4E,MAIT1B,EAAS2B,OAuCP,kBAAC,EAAD,CAAOzD,KAAMgC,EAAe1B,oBApCJ,SAAC3B,GAC3B,IAAI+E,EAAmB1B,EAAc2B,QAAO,SAACH,GAAD,OAAUA,EAAKpE,KAAOT,EAAKS,MACvE6C,EAAiByB,GAEjB,IAAMD,EAAa5B,EAAM5B,KAAI,SAACuD,GAC5B,OAAIA,EAAKpE,KAAOT,EAAKS,GACZ,2BACFoE,GADL,IAEE5E,MAAM,IAGD,eACF4E,MAIT1B,EAAS2B,QCtGOG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.af3b875f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Article = (props) => {\r\n  return (\r\n    <article>\r\n      <div\r\n        className={props.joke.like ? \"heart like\" : \"heart\"}\r\n        onClick={props.handleHeart}\r\n      ></div>\r\n      <div className=\"joke\">\r\n        <div className=\"joke-icon\">\r\n          <img src={props.joke.icon_url} />\r\n        </div>\r\n        <div className=\"joke-info\">\r\n          <div className=\"joke-id\">\r\n            <span>ID:</span>\r\n            <a href={props.joke.url} target=\"_blank\">\r\n              {props.joke.id}\r\n            </a>\r\n          </div>\r\n          <div className=\"joke-content\">{props.joke.value}</div>\r\n          <div className=\"joke-data\">\r\n            <div className=\"joke-update\">\r\n              Last update:\r\n              {Math.abs(\r\n                moment(props.joke.updated_at, \"YYYY-MM-DD h:mm:ss\").diff(\r\n                  Date.now(),\r\n                  \"hours\"\r\n                )\r\n              )}{\" \"}\r\n              hours ago\r\n            </div>\r\n            <div className=\"joke-category\">\r\n              {props.joke.categories.length > 0\r\n                ? props.joke.categories[0]\r\n                : \"NO CATEGORY\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\nexport default Article;\r\n","import React from \"react\";\r\n\r\nimport Article from \"./Article/Article\";\r\n\r\nconst Section = (props) => {\r\n  return (\r\n    <section>\r\n      {props.data.map((joke) => (\r\n        <Article\r\n          joke={joke}\r\n          key={joke.id}\r\n          handleHeart={() => props.handelFavoriteJokes(joke)}\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Burger = () => {\r\n  return (\r\n    <div className=\"burger\">\r\n      <span className=\"line line1\"></span>\r\n      <span className=\"line line2\"></span>\r\n      <span className=\"line line3\"></span>\r\n      <span className=\"line line4\"></span>\r\n    </div>\r\n  );\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport Article from \"../Section/Article/Article\";\r\nimport Burger from \"./Burger/Burger\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Aside = (props) => {\r\n  return (\r\n    <aside>\r\n      <div className=\"wrapper\">\r\n        <div className=\"flex\">\r\n          <Burger />\r\n          <span>Favourite</span>\r\n        </div>\r\n\r\n        <div className=\"favourite-joke\">\r\n          {props.data.map((joke) => (\r\n            <Article\r\n              joke={joke}\r\n              key={joke.id}\r\n              handleHeart={() => props.deleteFavoriteJokes(joke)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\nexport default Aside;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <span>MSI 2020</span>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","export const actualApi = (type, category, search) => {\r\n  if (type === \"random\") {\r\n    return \"https://api.chucknorris.io/jokes/random\";\r\n  } else if (type === \"caterogies\") {\r\n    return `https://api.chucknorris.io/jokes/random?category=${category}`;\r\n  } else {\r\n    return `https://api.chucknorris.io/jokes/search?query=${search}`;\r\n  }\r\n};\r\n\r\nexport const disabledButton = (checkedVariantJoke, selectCategory, search) => {\r\n  if (checkedVariantJoke === \"caterogies\" && selectCategory) {\r\n    return false;\r\n  } else if (checkedVariantJoke === `search` && search.length > 3) {\r\n    return false;\r\n  } else if (checkedVariantJoke === \"random\") {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport { disabledButton } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\nconst Main = ({\r\n  addJoke,\r\n  onChecked,\r\n  checkedVariantJoke,\r\n  setSelectCategory,\r\n  selectCategory,\r\n  search,\r\n  setSearch,\r\n  categories,\r\n}) => {\r\n  const disabled = disabledButton(checkedVariantJoke, selectCategory, search);\r\n\r\n  return (\r\n    <main>\r\n      <h1>Hey!</h1>\r\n      <h2>Letâ€™s try to find a joke htmlFor you:</h2>\r\n\r\n      <p>\r\n        <input\r\n          className=\"custom-checkbox\"\r\n          type=\"checkbox\"\r\n          name=\"random\"\r\n          id=\"random\"\r\n          checked={checkedVariantJoke === \"random\"}\r\n          onChange={() => onChecked(\"random\")}\r\n        />\r\n        <label htmlFor=\"random\"> Random</label>\r\n      </p>\r\n      <p>\r\n        <input\r\n          className=\"custom-checkbox\"\r\n          type=\"checkbox\"\r\n          name=\"caterogies\"\r\n          id=\"caterogies\"\r\n          checked={checkedVariantJoke === \"caterogies\"}\r\n          onChange={() => onChecked(\"caterogies\")}\r\n        />\r\n        <label htmlFor=\"caterogies\"> From caterogies</label>\r\n      </p>\r\n      {checkedVariantJoke === \"caterogies\" ? (\r\n        <ul className=\"categories\">\r\n          {categories.map((category) => {\r\n            return (\r\n              <li\r\n                onClick={() => setSelectCategory(category)}\r\n                className={selectCategory === category ? \"active\" : null}\r\n                key={category}\r\n              >\r\n                {category}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : null}\r\n\r\n      <p>\r\n        <input\r\n          className=\"custom-checkbox\"\r\n          type=\"checkbox\"\r\n          name=\"search\"\r\n          id=\"search\"\r\n          checked={checkedVariantJoke === \"search\"}\r\n          onChange={() => onChecked(\"search\")}\r\n        />\r\n        <label htmlFor=\"search\"> Search</label>\r\n      </p>\r\n      {checkedVariantJoke === \"search\" ? (\r\n        <p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            placeholder=\" Free text search... \"\r\n            value={search}\r\n            onChange={(event) => setSearch(event.target.value)}\r\n          />\r\n        </p>\r\n      ) : null}\r\n\r\n      <button id=\"button\" onClick={addJoke} disabled={disabled}>\r\n        Get a joke\r\n      </button>\r\n    </main>\r\n  );\r\n};\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport Section from \"../../components/Section/Section\";\nimport Aside from \"../../components/Aside/Aside\";\nimport Header from \"../../components/Header/Header\";\nimport Main from \"../../components/Main/Main\";\n\nimport { actualApi } from \"../../helpers\";\n\nimport \"../../assets/css/style.css\";\n\nfunction App() {\n  const [jokes, setJokes] = useState([]);\n\n  const [categories, setCategories] = useState([]);\n\n  const [favoriteJokes, setFavoriteJokes] = useState([]);\n\n  const [checkedVariantJoke, setCheckedVariantJoke] = useState(null);\n\n  const [selectCategory, setSelectCategory] = useState(null);\n\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const localFavoriteJokes = JSON.parse(\n      localStorage.getItem(\"jsonFavoriteJokes\")\n    );\n    setFavoriteJokes(localFavoriteJokes);\n    getCategories();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"jsonFavoriteJokes\", JSON.stringify(favoriteJokes));\n  }, [favoriteJokes]);\n\n  const getJokes = async () => {\n    try {\n      let response = await fetch(\n        actualApi(checkedVariantJoke, selectCategory, search)\n      );\n\n      let jokesFetch = await response.json();\n\n      if (checkedVariantJoke === `search`) {\n        setJokes([...jokes, ...jokesFetch.result]);\n      } else {\n        setJokes([...jokes, jokesFetch]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getCategories = async () => {\n    try {\n      let response = await fetch(\"https://api.chucknorris.io/jokes/categories\");\n\n      let categoriesFetch = await response.json();\n\n      setCategories(categoriesFetch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addJoke = (event) => {\n    event.preventDefault();\n    getJokes();\n  };\n\n  const onChecked = (type) => {\n    setCheckedVariantJoke(type);\n  };\n\n  const handelFavoriteJokes = (joke) => {\n    if (favoriteJokes.length === 0) {\n      setFavoriteJokes([...favoriteJokes, { ...joke, like: true }]);\n    } else {\n      if (favoriteJokes.every((item) => item.id !== joke.id)) {\n        setFavoriteJokes([...favoriteJokes, { ...joke, like: true }]);\n      }\n    }\n    const updateJoke = jokes.map((item) => {\n      if (item.id === joke.id) {\n        return {\n          ...item,\n          like: true,\n        };\n      } else {\n        return {\n          ...item,\n        };\n      }\n    });\n    setJokes(updateJoke);\n  };\n\n  const deleteFavoriteJokes = (joke) => {\n    let newFavoriteJokes = favoriteJokes.filter((item) => item.id !== joke.id);\n    setFavoriteJokes(newFavoriteJokes);\n\n    const updateJoke = jokes.map((item) => {\n      if (item.id === joke.id) {\n        return {\n          ...item,\n          like: false,\n        };\n      } else {\n        return {\n          ...item,\n        };\n      }\n    });\n    setJokes(updateJoke);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"content\">\n        <Header />\n        <Main\n          addJoke={addJoke}\n          onChecked={onChecked}\n          checkedVariantJoke={checkedVariantJoke}\n          setSelectCategory={setSelectCategory}\n          selectCategory={selectCategory}\n          setSearch={setSearch}\n          search={search}\n          categories={categories}\n        />\n        <Section data={jokes} handelFavoriteJokes={handelFavoriteJokes} />\n      </div>\n\n      <Aside data={favoriteJokes} deleteFavoriteJokes={deleteFavoriteJokes} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}